{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/regesx-cheat-sheet","result":{"data":{"markdownRemark":{"id":"c33c89fc-0384-51c6-9da1-7975d0c7c5dd","html":"<h2 id=\"ranges\" style=\"position:relative;\"><a href=\"#ranges\" aria-label=\"ranges permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ranges</h2>\n<p>All Ranges are inclusive</p>\n<ul>\n<li><strong>[a-z]</strong> ⇒ from a to z lower case only</li>\n<li><strong>[A-Z]</strong> ⇒ from A to Z upper case only</li>\n<li><strong>[0-9]</strong> ⇒ from 0 to 9</li>\n<li><strong>[a-f]</strong> ⇒ from a to f</li>\n<li><strong>[g-p]</strong> ⇒ from g to p</li>\n<li><strong>[#$%&#x26;@]</strong> ⇒ any of those symbols</li>\n<li><strong>[a-zA-Z0-9]</strong> ⇒ all digits, lower and upper case letters.</li>\n</ul>\n<h2 id=\"repeat-exact\" style=\"position:relative;\"><a href=\"#repeat-exact\" aria-label=\"repeat exact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repeat exact</h2>\n<p>using the {} curly braces notation</p>\n<ul>\n<li>a{5} ⇒ will match “aaaaa”.</li>\n<li>n{3} ⇒ will match “nnn”.</li>\n<li>[a-z]{4} ⇒ will match any four-letter word such as</li>\n<li>[a-z]{6,} ⇒ will match any word with six or more letters.</li>\n<li>[a-z]{8,11} ⇒ will match any word between eight and 11 letters.</li>\n<li>[0-9]{11} ⇒ will match an 11-digit number.</li>\n</ul>\n<h2 id=\"generic-selectors\" style=\"position:relative;\"><a href=\"#generic-selectors\" aria-label=\"generic selectors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generic selectors</h2>\n<ul>\n<li><strong>\\d</strong> ⇒ matches any digit that is the same as [0-9]</li>\n<li><strong>\\w</strong> ⇒ matches any letter, digit and underscore character</li>\n<li><strong>\\s</strong> ⇒ matches a whitespace character — that is, a space or tab</li>\n<li><strong>\\t</strong> ⇒ matches a tab character only</li>\n<li><strong>.</strong> ⇒ match any digit, letter or symbol except newline.</li>\n</ul>\n<h2 id=\"special-characters-nasty-ones\" style=\"position:relative;\"><a href=\"#special-characters-nasty-ones\" aria-label=\"special characters nasty ones permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Special Characters (nasty ones)</h2>\n<ul>\n<li><strong>+</strong> ⇒ One or more</li>\n<li><strong>?</strong> ⇒ Zero or one</li>\n<li><strong>*</strong> ⇒ <em>Zero or more.</em> It’s like the combination of + and ?.</li>\n<li><strong>\\</strong> ⇒ escape character</li>\n<li><strong>[^]</strong> ⇒ logical not or except</li>\n<li><strong>|</strong> (pipe char) ⇒ logical or</li>\n<li><strong>()</strong> ⇒ group together</li>\n<li><strong>^</strong> ⇒ start of a string.</li>\n<li><strong>$</strong> ⇒ end of the string.</li>\n</ul>","fields":{"slug":"/posts/regesx-cheat-sheet","tagSlugs":["/tag/regex/","/tag/regular-expression/"]},"frontmatter":{"date":"2020-08-19T10:04:20.177Z","description":"Go to Regex cheat sheet to help me reading other people regular expressions ","tags":["regex","regular expression"],"title":"Regex Cheatsheet","socialImage":null}}},"pageContext":{"slug":"/posts/regesx-cheat-sheet"}},"staticQueryHashes":["251939775","3942705351","401334301"]}